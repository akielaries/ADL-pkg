name: Test pip

on:
  workflow_call:

jobs:
  PyARMV6:
    # The host should always be Linux
    runs-on: ubuntu-latest
    name: PyPI openGPMP ARMv6
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: armv6
          distro: bullseye

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a) 

      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Test openGPMP install on bullseye ARMv6
        run: | 
          pip install pygpmp
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
          # confirm samples run
          cd samples/python 
          for f in *.py; do python3 "$f"; done 

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
  PyARMV7:
    # The host should always be Linux
    runs-on: ubuntu-latest
    name: PyPI openGPMP ARMv7 
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu_latest

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a) 

      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Test openGPMP install on ubuntu ARMv7
        run: | 
          pip install pygpmp
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
          # confirm samples run
          cd samples/python 
          for f in *.py; do python3 "$f"; done 

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
  
  PyARMV8:
    # The host should always be Linux
    runs-on: ubuntu-latest
    name: PyPI openGPMP ARMv6 
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu_latest

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a) 

      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Test openGPMP install on ubuntu ARMv8
        run: | 
          pip install pygpmp
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
          # confirm samples run
          cd samples/python 
          for f in *.py; do python3 "$f"; done 

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"

  PyNix:
    name: Test openGPMP on Linux
    runs-on: [ ubuntu-latest ] 

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Test openGPMP install
        run: |
          pip install pygpmp
          # confirm samples run
          cd samples/python 
          for f in *.py; do python3 "$f"; done 

  PyOSX:
    name: Test openGPMP on Darwin
    runs-on: [ macos-latest ] 

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Test openGPMP install
        run: |
          pip install pygpmp
          # confirm samples run
          cd samples/python 
          for f in *.py; do python3 "$f"; done 

  pip_raspy:
    runs-on: ubuntu-latest
    steps:
      -   
        name: initalize github repo
        uses: actions/checkout@v3

      -   
        name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      -   
        name: pip install pygpmp on RPI OS ARMv8 Image
        uses: pguyot/arm-runner-action@v2
        id: build_image
        with:
          base_image: raspios_lite_arm64:latest
          commands: |
            uname -a
            echo ::set-output name=uname::$(uname -a) 
            apt-get update
            apt-get install -y python3 python3-distutils python3-pip python3-apt python3-dev
            apt-get install -y pkg-config
            pip install --upgrade pip setuptools wheel
            pip install pygpmp
            cd samples/python
            for f in *.py; do python3 "$f"; done
      -   
        name: Get platform info
        run: |
          uname -a
          echo ::set-output name=uname::$(uname -a) 

  PyPPC64LE:
    # The host should always be Linux
    runs-on: ubuntu-latest
    name: PyPI openGPMP PPC64LE
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: ppc64le
          distro: ubuntu_latest

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a) 

      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Test openGPMP install on ubuntu PPC64LE
        run: | 
          pip install pygpmp
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
          # confirm samples run
          cd samples/python 
          for f in *.py; do python3 "$f"; done 

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"

  PyRISCV:
    # The host should always be Linux
    runs-on: ubuntu-latest
    name: PyPI openGPMP RISCV64
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: riscv64
          distro: ubuntu_latest

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a) 

      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Test openGPMP install on ubuntu RISCV64
        run: | 
          pip install pygpmp
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
          # confirm samples run
          cd samples/python 
          for f in *.py; do python3 "$f"; done 

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"

  PyS390X:
    # The host should always be Linux
    runs-on: ubuntu-latest
    name: PyPI openGPMP S390X
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: s390x
          distro: ubuntu_latest

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a) 

      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Test openGPMP install on ubuntu S390X
        run: | 
          pip install pygpmp
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
          # confirm samples run
          cd samples/python 
          for f in *.py; do python3 "$f"; done 

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"


