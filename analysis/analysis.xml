<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.7"/>
    <errors>
        <error id="unusedVariable" severity="style" msg="Unused variable: i" verbose="Unused variable: i" cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="15" column="15"/>
            <symbol>i</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: j" verbose="Unused variable: j" cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="15" column="18"/>
            <symbol>j</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;left&apos; is assigned a value that is never used." verbose="Variable &apos;left&apos; is assigned a value that is never used." cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="113" column="10"/>
            <symbol>left</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;top&apos; is assigned a value that is never used." verbose="Variable &apos;top&apos; is assigned a value that is never used." cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="114" column="9"/>
            <symbol>top</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;xside&apos; is assigned a value that is never used." verbose="Variable &apos;xside&apos; is assigned a value that is never used." cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="115" column="11"/>
            <symbol>xside</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;yside&apos; is assigned a value that is never used." verbose="Variable &apos;yside&apos; is assigned a value that is never used." cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="116" column="11"/>
            <symbol>yside</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: errorcode" verbose="Unused variable: errorcode" cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="100" column="26"/>
            <symbol>errorcode</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: i" verbose="Unused variable: i" cwe="563" file0="../../modules/complex/Mandelbrot.cpp">
            <location file="../../modules/complex/Mandelbrot.cpp" line="44" column="15"/>
            <symbol>i</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: j" verbose="Unused variable: j" cwe="563" file0="../../modules/complex/Mandelbrot.cpp">
            <location file="../../modules/complex/Mandelbrot.cpp" line="44" column="18"/>
            <symbol>j</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: errorcode" verbose="Unused variable: errorcode" cwe="563" file0="../../modules/complex/Mandelbrot.cpp">
            <location file="../../modules/complex/Mandelbrot.cpp" line="116" column="26"/>
            <symbol>errorcode</symbol>
        </error>
        <error id="syntaxError" severity="error" msg="Code &apos;classCamera{&apos; is invalid C code. Use --std or --language to configure the language." verbose="Code &apos;classCamera{&apos; is invalid C code. Use --std or --language to configure the language." file0="../../modules/complex/openGL_bounce.c">
            <location file="../../modules/complex/openGL_bounce.c" line="19" column="1"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/complex/openGL_example00.c">
            <location file="../../modules/complex/openGL_example00.c" line="32" column="11"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/complex/openGL_example00.c">
            <location file="../../modules/complex/openGL_example00.c" line="32" column="14"/>
            <symbol>y</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;num_omitted_rows&apos; can be reduced." verbose="The scope of the variable &apos;num_omitted_rows&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/core/datatable2.cpp">
            <location file="../../modules/core/datatable2.cpp" line="200" column="9"/>
            <symbol>num_omitted_rows</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="../../modules/disct/graphs.cpp">
            <location file="../../modules/disct/graphs.cpp" line="406" column="44"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/disct/graphs.cpp">
            <location file="../../modules/disct/graphs.cpp" line="676" column="24"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/arm/mtx_arm_vec_f32.cpp">
            <location file="../../modules/linalg/arm/mtx_arm_vec_f32.cpp" line="73" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/arm/mtx_arm_vec_f32.cpp" line="70" column="27" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/arm/mtx_arm_vec_f32.cpp">
            <location file="../../modules/linalg/arm/mtx_arm_vec_f32.cpp" line="103" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/arm/mtx_arm_vec_f32.cpp" line="100" column="27" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/avx/mtx_avx2_arr_f32.cpp">
            <location file="../../modules/linalg/avx/mtx_avx2_arr_f32.cpp" line="74" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/avx/mtx_avx2_arr_f32.cpp" line="72" column="26" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/avx/mtx_avx2_arr_f64.cpp">
            <location file="../../modules/linalg/avx/mtx_avx2_arr_f64.cpp" line="73" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/avx/mtx_avx2_arr_f64.cpp" line="71" column="27" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/avx/mtx_avx2_arr_i16.cpp">
            <location file="../../modules/linalg/avx/mtx_avx2_arr_i16.cpp" line="104" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/avx/mtx_avx2_arr_i16.cpp" line="100" column="23" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/avx/mtx_avx2_arr_i32.cpp">
            <location file="../../modules/linalg/avx/mtx_avx2_arr_i32.cpp" line="116" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/avx/mtx_avx2_arr_i32.cpp" line="112" column="23" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/avx/mtx_avx2_arr_i8.cpp">
            <location file="../../modules/linalg/avx/mtx_avx2_arr_i8.cpp" line="105" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/avx/mtx_avx2_arr_i8.cpp" line="101" column="23" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/avx/mtx_avx2_vec_f32.cpp">
            <location file="../../modules/linalg/avx/mtx_avx2_vec_f32.cpp" line="75" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/avx/mtx_avx2_vec_f32.cpp" line="72" column="26" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/avx/mtx_avx2_vec_f64.cpp">
            <location file="../../modules/linalg/avx/mtx_avx2_vec_f64.cpp" line="75" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/avx/mtx_avx2_vec_f64.cpp" line="72" column="27" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/avx/mtx_avx2_vec_f64.cpp">
            <location file="../../modules/linalg/avx/mtx_avx2_vec_f64.cpp" line="108" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/avx/mtx_avx2_vec_f64.cpp" line="105" column="23" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/avx/mtx_avx2_vec_i32.cpp">
            <location file="../../modules/linalg/avx/mtx_avx2_vec_i32.cpp" line="78" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/avx/mtx_avx2_vec_i32.cpp" line="74" column="27" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/avx/mtx_avx2_vec_i32.cpp">
            <location file="../../modules/linalg/avx/mtx_avx2_vec_i32.cpp" line="117" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/avx/mtx_avx2_vec_i32.cpp" line="113" column="23" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;j&apos; can be reduced." verbose="The scope of the variable &apos;j&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/linalg/dgemm_arr.cpp">
            <location file="../../modules/linalg/dgemm_arr.cpp" line="147" column="12"/>
            <symbol>j</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/linalg/dgemm_arr.cpp">
            <location file="../../modules/linalg/dgemm_arr.cpp" line="195" column="9"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nc&apos; can be reduced." verbose="The scope of the variable &apos;nc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/linalg/dgemm_arr.cpp">
            <location file="../../modules/linalg/dgemm_arr.cpp" line="403" column="13"/>
            <symbol>nc</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;B&apos; can be declared with const" verbose="Parameter &apos;B&apos; can be declared with const" cwe="398" file0="../../modules/linalg/gpu/_gpu_kernel_mtx_mul.c">
            <location file="../../modules/linalg/gpu/_gpu_kernel_mtx_mul.c" line="6" column="41" info="Parameter &apos;B&apos; can be declared with const"/>
            <symbol>B</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;A&apos; can be declared with const" verbose="Parameter &apos;A&apos; can be declared with const" cwe="398" file0="../../modules/linalg/gpu/_gpu_kernel_mtx_mul.c">
            <location file="../../modules/linalg/gpu/_gpu_kernel_mtx_mul.c" line="5" column="41" info="Parameter &apos;A&apos; can be declared with const"/>
            <symbol>A</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;v1&apos; can be declared with const" verbose="Parameter &apos;v1&apos; can be declared with const" cwe="398" file0="../../modules/linalg/gpu/_gpu_mtx_add.c">
            <location file="../../modules/linalg/gpu/_gpu_mtx_add.c" line="85" column="24" info="Parameter &apos;v1&apos; can be declared with const"/>
            <symbol>v1</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;v2&apos; can be declared with const" verbose="Parameter &apos;v2&apos; can be declared with const" cwe="398" file0="../../modules/linalg/gpu/_gpu_mtx_add.c">
            <location file="../../modules/linalg/gpu/_gpu_mtx_add.c" line="85" column="33" info="Parameter &apos;v2&apos; can be declared with const"/>
            <symbol>v2</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: start" verbose="Unused variable: start" cwe="563" file0="../../modules/linalg/gpu/_gpu_mtx_add.c">
            <location file="../../modules/linalg/gpu/_gpu_mtx_add.c" line="99" column="20"/>
            <symbol>start</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: finish" verbose="Unused variable: finish" cwe="563" file0="../../modules/linalg/gpu/_gpu_mtx_add.c">
            <location file="../../modules/linalg/gpu/_gpu_mtx_add.c" line="99" column="27"/>
            <symbol>finish</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: duration" verbose="Unused variable: duration" cwe="563" file0="../../modules/linalg/gpu/_gpu_mtx_add.c">
            <location file="../../modules/linalg/gpu/_gpu_mtx_add.c" line="100" column="12"/>
            <symbol>duration</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: ret_num_devices" verbose="Unused variable: ret_num_devices" cwe="563" file0="../../modules/linalg/gpu/_gpu_mtx_add.c">
            <location file="../../modules/linalg/gpu/_gpu_mtx_add.c" line="143" column="13"/>
            <symbol>ret_num_devices</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: string" verbose="Unused variable: string" cwe="563" file0="../../modules/linalg/gpu/_gpu_mtx_add.c">
            <location file="../../modules/linalg/gpu/_gpu_mtx_add.c" line="153" column="10"/>
            <symbol>string</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;B&apos; can be declared with const" verbose="Parameter &apos;B&apos; can be declared with const" cwe="398" file0="../../modules/linalg/gpu/_gpu_mtx_kernel.c">
            <location file="../../modules/linalg/gpu/_gpu_mtx_kernel.c" line="18" column="41" info="Parameter &apos;B&apos; can be declared with const"/>
            <symbol>B</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;A&apos; can be declared with const" verbose="Parameter &apos;A&apos; can be declared with const" cwe="398" file0="../../modules/linalg/gpu/_gpu_mtx_kernel.c">
            <location file="../../modules/linalg/gpu/_gpu_mtx_kernel.c" line="17" column="41" info="Parameter &apos;A&apos; can be declared with const"/>
            <symbol>A</symbol>
        </error>
        <error id="syntaxError" severity="error" msg="Code &apos;std::random_device&apos; is invalid C code. Use --std or --language to configure the language." verbose="Code &apos;std::random_device&apos; is invalid C code. Use --std or --language to configure the language." file0="../../modules/linalg/gpu/mtx_x86.c">
            <location file="../../modules/linalg/gpu/mtx_x86.c" line="9" column="5"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;j&apos; can be reduced." verbose="The scope of the variable &apos;j&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/linalg/igemm_arr.cpp">
            <location file="../../modules/linalg/igemm_arr.cpp" line="76" column="12"/>
            <symbol>j</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/linalg/igemm_arr.cpp">
            <location file="../../modules/linalg/igemm_arr.cpp" line="124" column="9"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nr&apos; can be reduced." verbose="The scope of the variable &apos;nr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/linalg/igemm_arr.cpp">
            <location file="../../modules/linalg/igemm_arr.cpp" line="280" column="13"/>
            <symbol>nr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nc&apos; can be reduced." verbose="The scope of the variable &apos;nc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/linalg/igemm_arr.cpp">
            <location file="../../modules/linalg/igemm_arr.cpp" line="353" column="13"/>
            <symbol>nc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;j&apos; can be reduced." verbose="The scope of the variable &apos;j&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/linalg/sgemm_arr.cpp">
            <location file="../../modules/linalg/sgemm_arr.cpp" line="76" column="12"/>
            <symbol>j</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/linalg/sgemm_arr.cpp">
            <location file="../../modules/linalg/sgemm_arr.cpp" line="124" column="9"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nr&apos; can be reduced." verbose="The scope of the variable &apos;nr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/linalg/sgemm_arr.cpp">
            <location file="../../modules/linalg/sgemm_arr.cpp" line="281" column="13"/>
            <symbol>nr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nc&apos; can be reduced." verbose="The scope of the variable &apos;nc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/linalg/sgemm_arr.cpp">
            <location file="../../modules/linalg/sgemm_arr.cpp" line="354" column="13"/>
            <symbol>nc</symbol>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="#endif without #if" verbose="#endif without #if">
            <location file="../../modules/linalg/sse/mtx_sse2_arr_f32.cpp" line="91" column="0"/>
        </error>
        <error id="noValidConfiguration" severity="information" msg="This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details." verbose="This file is not analyzed. Cppcheck failed to extract a valid configuration. The tested configurations have these preprocessor errors:\012&apos;&apos; : [../../modules/linalg/sse/mtx_sse2_arr_f32.cpp:91] #endif without #if\012__SSE2__ : [../../modules/linalg/sse/mtx_sse2_arr_f32.cpp:91] #endif without #if\012__amd64;__amd64__;__x86_64__ : [../../modules/linalg/sse/mtx_sse2_arr_f32.cpp:91] #endif without #if" file0="../../modules/linalg/sse/mtx_sse2_arr_f32.cpp">
            <location file="../../modules/linalg/sse/mtx_sse2_arr_f32.cpp" line="0" column="0"/>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="#endif without #if" verbose="#endif without #if">
            <location file="../../modules/linalg/sse/mtx_sse2_arr_f64.cpp" line="92" column="0"/>
        </error>
        <error id="noValidConfiguration" severity="information" msg="This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details." verbose="This file is not analyzed. Cppcheck failed to extract a valid configuration. The tested configurations have these preprocessor errors:\012&apos;&apos; : [../../modules/linalg/sse/mtx_sse2_arr_f64.cpp:92] #endif without #if\012__SSE2__ : [../../modules/linalg/sse/mtx_sse2_arr_f64.cpp:92] #endif without #if\012__amd64;__amd64__;__x86_64__ : [../../modules/linalg/sse/mtx_sse2_arr_f64.cpp:92] #endif without #if" file0="../../modules/linalg/sse/mtx_sse2_arr_f64.cpp">
            <location file="../../modules/linalg/sse/mtx_sse2_arr_f64.cpp" line="0" column="0"/>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="#endif without #if" verbose="#endif without #if">
            <location file="../../modules/linalg/sse/mtx_sse2_arr_i16.cpp" line="87" column="0"/>
        </error>
        <error id="noValidConfiguration" severity="information" msg="This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details." verbose="This file is not analyzed. Cppcheck failed to extract a valid configuration. The tested configurations have these preprocessor errors:\012&apos;&apos; : [../../modules/linalg/sse/mtx_sse2_arr_i16.cpp:87] #endif without #if\012__SSE2__ : [../../modules/linalg/sse/mtx_sse2_arr_i16.cpp:87] #endif without #if\012__amd64;__amd64__;__x86_64__ : [../../modules/linalg/sse/mtx_sse2_arr_i16.cpp:87] #endif without #if" file0="../../modules/linalg/sse/mtx_sse2_arr_i16.cpp">
            <location file="../../modules/linalg/sse/mtx_sse2_arr_i16.cpp" line="0" column="0"/>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="#endif without #if" verbose="#endif without #if">
            <location file="../../modules/linalg/sse/mtx_sse2_arr_i32.cpp" line="98" column="0"/>
        </error>
        <error id="noValidConfiguration" severity="information" msg="This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details." verbose="This file is not analyzed. Cppcheck failed to extract a valid configuration. The tested configurations have these preprocessor errors:\012&apos;&apos; : [../../modules/linalg/sse/mtx_sse2_arr_i32.cpp:98] #endif without #if\012__SSE2__ : [../../modules/linalg/sse/mtx_sse2_arr_i32.cpp:98] #endif without #if\012__amd64;__amd64__;__x86_64__ : [../../modules/linalg/sse/mtx_sse2_arr_i32.cpp:98] #endif without #if" file0="../../modules/linalg/sse/mtx_sse2_arr_i32.cpp">
            <location file="../../modules/linalg/sse/mtx_sse2_arr_i32.cpp" line="0" column="0"/>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="#endif without #if" verbose="#endif without #if">
            <location file="../../modules/linalg/sse/mtx_sse2_arr_i8.cpp" line="87" column="0"/>
        </error>
        <error id="noValidConfiguration" severity="information" msg="This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details." verbose="This file is not analyzed. Cppcheck failed to extract a valid configuration. The tested configurations have these preprocessor errors:\012&apos;&apos; : [../../modules/linalg/sse/mtx_sse2_arr_i8.cpp:87] #endif without #if\012__SSE2__ : [../../modules/linalg/sse/mtx_sse2_arr_i8.cpp:87] #endif without #if\012__amd64;__amd64__;__x86_64__ : [../../modules/linalg/sse/mtx_sse2_arr_i8.cpp:87] #endif without #if" file0="../../modules/linalg/sse/mtx_sse2_arr_i8.cpp">
            <location file="../../modules/linalg/sse/mtx_sse2_arr_i8.cpp" line="0" column="0"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/sse/mtx_sse2_vec_f32.cpp">
            <location file="../../modules/linalg/sse/mtx_sse2_vec_f32.cpp" line="75" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/sse/mtx_sse2_vec_f32.cpp" line="72" column="26" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="#endif without #if" verbose="#endif without #if">
            <location file="../../modules/linalg/sse/mtx_sse2_vec_f64.cpp" line="182" column="0"/>
        </error>
        <error id="noValidConfiguration" severity="information" msg="This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details." verbose="This file is not analyzed. Cppcheck failed to extract a valid configuration. The tested configurations have these preprocessor errors:\012&apos;&apos; : [../../modules/linalg/sse/mtx_sse2_vec_f64.cpp:182] #endif without #if\012__SSE2__ : [../../modules/linalg/sse/mtx_sse2_vec_f64.cpp:182] #endif without #if\012__amd64;__amd64__;__x86_64__ : [../../modules/linalg/sse/mtx_sse2_vec_f64.cpp:182] #endif without #if" file0="../../modules/linalg/sse/mtx_sse2_vec_f64.cpp">
            <location file="../../modules/linalg/sse/mtx_sse2_vec_f64.cpp" line="0" column="0"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/sse/mtx_sse2_vec_i32.cpp">
            <location file="../../modules/linalg/sse/mtx_sse2_vec_i32.cpp" line="77" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/sse/mtx_sse2_vec_i32.cpp" line="73" column="27" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/sse/mtx_sse2_vec_i32.cpp">
            <location file="../../modules/linalg/sse/mtx_sse2_vec_i32.cpp" line="113" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/sse/mtx_sse2_vec_i32.cpp" line="109" column="23" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/linalg/tensor.cpp">
            <location file="../../modules/linalg/tensor.cpp" line="53" column="19"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;totalSize&apos; is assigned a value that is never used." verbose="Variable &apos;totalSize&apos; is assigned a value that is never used." cwe="563" file0="../../modules/linalg/tensor.cpp">
            <location file="../../modules/linalg/tensor.cpp" line="51" column="22"/>
            <symbol>totalSize</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;totalSize&apos; is assigned a value that is never used." verbose="Variable &apos;totalSize&apos; is assigned a value that is never used." cwe="563" file0="../../modules/linalg/tensor.cpp">
            <location file="../../modules/linalg/tensor.cpp" line="53" column="19"/>
            <symbol>totalSize</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/linalg/vector_naive.cpp">
            <location file="../../modules/linalg/vector_naive.cpp" line="59" column="14"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/linalg/vector_naive.cpp">
            <location file="../../modules/linalg/vector_naive.cpp" line="100" column="14"/>
        </error>
        <error id="unpreciseMathCall" severity="style" msg="Expression &apos;log(1 + x)&apos; can be replaced by &apos;log1p(x)&apos; to avoid loss of precision." verbose="Expression &apos;log(1 + x)&apos; can be replaced by &apos;log1p(x)&apos; to avoid loss of precision." cwe="758" file0="../../modules/ml/activators.cpp">
            <location file="../../modules/ml/activators.cpp" line="123" column="12"/>
        </error>
        <error id="unpreciseMathCall" severity="style" msg="Expression &apos;exp(x) - 1&apos; can be replaced by &apos;expm1(x)&apos; to avoid loss of precision." verbose="Expression &apos;exp(x) - 1&apos; can be replaced by &apos;expm1(x)&apos; to avoid loss of precision." cwe="758" file0="../../modules/ml/activators.cpp">
            <location file="../../modules/ml/activators.cpp" line="127" column="34"/>
        </error>
        <error id="unpreciseMathCall" severity="style" msg="Expression &apos;exp(x) - 1&apos; can be replaced by &apos;expm1(x)&apos; to avoid loss of precision." verbose="Expression &apos;exp(x) - 1&apos; can be replaced by &apos;expm1(x)&apos; to avoid loss of precision." cwe="758" file0="../../modules/ml/activators.cpp">
            <location file="../../modules/ml/activators.cpp" line="135" column="43"/>
        </error>
        <error id="unpreciseMathCall" severity="style" msg="Expression &apos;log(1 + x)&apos; can be replaced by &apos;log1p(x)&apos; to avoid loss of precision." verbose="Expression &apos;log(1 + x)&apos; can be replaced by &apos;log1p(x)&apos; to avoid loss of precision." cwe="758" file0="../../modules/ml/encoder.cpp">
            <location file="../../modules/ml/encoder.cpp" line="409" column="52"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: generator" verbose="Unused variable: generator" cwe="563" file0="../../modules/ml/encoder.cpp">
            <location file="../../modules/ml/encoder.cpp" line="555" column="32"/>
            <symbol>generator</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/ml/regularizers.cpp">
            <location file="../../modules/ml/regularizers.cpp" line="53" column="17"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../modules/ml/regularizers.cpp">
            <location file="../../modules/ml/regularizers.cpp" line="98" column="17"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/ml/regularizers.cpp">
            <location file="../../modules/ml/regularizers.cpp" line="108" column="14"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../modules/ml/regularizers.cpp">
            <location file="../../modules/ml/regularizers.cpp" line="114" column="20"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../modules/ml/regularizers.cpp">
            <location file="../../modules/ml/regularizers.cpp" line="123" column="16"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/ml/regularizers.cpp">
            <location file="../../modules/ml/regularizers.cpp" line="136" column="18"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/ml/regularizers.cpp">
            <location file="../../modules/ml/regularizers.cpp" line="142" column="22"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/ml/svc.cpp">
            <location file="../../modules/ml/svc.cpp" line="92" column="14"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;x&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;x&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/nt/logarithms.cpp">
            <location file="../../modules/nt/logarithms.cpp" line="63" column="7" info="x is overwritten"/>
            <location file="../../modules/nt/logarithms.cpp" line="59" column="16" info="x is initialized"/>
            <symbol>x</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;swapped&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;swapped&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/nt/rc4.cpp">
            <location file="../../modules/nt/rc4.cpp" line="51" column="13" info="swapped is overwritten"/>
            <location file="../../modules/nt/rc4.cpp" line="50" column="21" info="swapped is initialized"/>
            <symbol>swapped</symbol>
        </error>
        <error id="uninitvar" severity="error" msg="Uninitialized variable: block[j/4]" verbose="Uninitialized variable: block[j/4]" cwe="457" file0="../../modules/nt/rc6.cpp">
            <location file="../../modules/nt/rc6.cpp" line="111" column="18"/>
            <symbol>block[j/4]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;best_point&apos; is assigned a value that is never used." verbose="Variable &apos;best_point&apos; is assigned a value that is never used." cwe="563" file0="../../modules/optim/function.cpp">
            <location file="../../modules/optim/function.cpp" line="244" column="35"/>
            <symbol>best_point</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;best_point&apos; is assigned a value that is never used." verbose="Variable &apos;best_point&apos; is assigned a value that is never used." cwe="563" file0="../../modules/optim/function.cpp">
            <location file="../../modules/optim/function.cpp" line="254" column="24"/>
            <symbol>best_point</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sum_x_cubed&apos; is assigned a value that is never used." verbose="Variable &apos;sum_x_cubed&apos; is assigned a value that is never used." cwe="563" file0="../../modules/optim/function.cpp">
            <location file="../../modules/optim/function.cpp" line="458" column="71"/>
            <symbol>sum_x_cubed</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sum_x_cubed&apos; is assigned a value that is never used." verbose="Variable &apos;sum_x_cubed&apos; is assigned a value that is never used." cwe="563" file0="../../modules/optim/function.cpp">
            <location file="../../modules/optim/function.cpp" line="468" column="21"/>
            <symbol>sum_x_cubed</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;updated_point&apos; is assigned a value that is never used." verbose="Variable &apos;updated_point&apos; is assigned a value that is never used." cwe="563" file0="../../modules/optim/quasi.cpp">
            <location file="../../modules/optim/quasi.cpp" line="231" column="39"/>
            <symbol>updated_point</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/stats/describe.cpp">
            <location file="../../modules/stats/describe.cpp" line="42" column="13"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/stats/describe.cpp">
            <location file="../../modules/stats/describe.cpp" line="51" column="17"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/stats/describe.cpp">
            <location file="../../modules/stats/describe.cpp" line="80" column="13"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;/&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="../../modules/stats/probdist.cpp">
            <location file="../../modules/stats/probdist.cpp" line="107" column="23"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::count_if algorithm instead of a raw loop." verbose="Consider using std::count_if algorithm instead of a raw loop." cwe="398" file0="../../modules/stats/probdist.cpp">
            <location file="../../modules/stats/probdist.cpp" line="173" column="13"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;add_vec_gpu&apos; is never used." verbose="The function &apos;add_vec_gpu&apos; is never used." cwe="561">
            <location file="../../modules/linalg/gpu/_gpu_kernel_mtx_add.c" line="4" column="0"/>
            <symbol>add_vec_gpu</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;map_file&apos; is never used." verbose="The function &apos;map_file&apos; is never used." cwe="561">
            <location file="../../modules/core/datatable2.cpp" line="74" column="0"/>
            <symbol>map_file</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;matrixMul&apos; is never used." verbose="The function &apos;matrixMul&apos; is never used." cwe="561">
            <location file="../../modules/linalg/gpu/_gpu_kernel_mtx_mul.c" line="4" column="0"/>
            <symbol>matrixMul</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config."/>
    </errors>
</results>
