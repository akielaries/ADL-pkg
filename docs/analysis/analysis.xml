<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.13.0"/>
    <errors>
        <error id="constParameter" severity="style" msg="Parameter &apos;arr&apos; can be declared as const array" verbose="Parameter &apos;arr&apos; can be declared as const array" cwe="398" file0="../../modules/arithmetic/arith.cpp">
            <location file="../../include/arithmetic.hpp" line="68" column="17" info="Parameter &apos;arr&apos; can be declared as const array"/>
            <symbol>arr</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;arr&apos; can be declared as const array" verbose="Parameter &apos;arr&apos; can be declared as const array" cwe="398" file0="../../modules/arithmetic/arith.cpp">
            <location file="../../include/arithmetic.hpp" line="77" column="17" info="Parameter &apos;arr&apos; can be declared as const array"/>
            <symbol>arr</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;arr&apos; can be declared as const array" verbose="Parameter &apos;arr&apos; can be declared as const array" cwe="398" file0="../../modules/arithmetic/arith.cpp">
            <location file="../../include/arithmetic.hpp" line="86" column="17" info="Parameter &apos;arr&apos; can be declared as const array"/>
            <symbol>arr</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/calculus/differential.cpp">
            <location file="../../modules/calculus/differential.cpp" line="116" column="16"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/calculus/differential.cpp">
            <location file="../../modules/calculus/differential.cpp" line="125" column="16"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: i" verbose="Unused variable: i" cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="15" column="15"/>
            <symbol>i</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: j" verbose="Unused variable: j" cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="15" column="18"/>
            <symbol>j</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;left&apos; is assigned a value that is never used." verbose="Variable &apos;left&apos; is assigned a value that is never used." cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="113" column="10"/>
            <symbol>left</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;top&apos; is assigned a value that is never used." verbose="Variable &apos;top&apos; is assigned a value that is never used." cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="114" column="9"/>
            <symbol>top</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;xside&apos; is assigned a value that is never used." verbose="Variable &apos;xside&apos; is assigned a value that is never used." cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="115" column="11"/>
            <symbol>xside</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;yside&apos; is assigned a value that is never used." verbose="Variable &apos;yside&apos; is assigned a value that is never used." cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="116" column="11"/>
            <symbol>yside</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: errorcode" verbose="Unused variable: errorcode" cwe="563" file0="../../modules/complex/Mandelbrot.c">
            <location file="../../modules/complex/Mandelbrot.c" line="100" column="26"/>
            <symbol>errorcode</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: i" verbose="Unused variable: i" cwe="563" file0="../../modules/complex/Mandelbrot.cpp">
            <location file="../../modules/complex/Mandelbrot.cpp" line="46" column="15"/>
            <symbol>i</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: j" verbose="Unused variable: j" cwe="563" file0="../../modules/complex/Mandelbrot.cpp">
            <location file="../../modules/complex/Mandelbrot.cpp" line="46" column="18"/>
            <symbol>j</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: errorcode" verbose="Unused variable: errorcode" cwe="563" file0="../../modules/complex/Mandelbrot.cpp">
            <location file="../../modules/complex/Mandelbrot.cpp" line="118" column="26"/>
            <symbol>errorcode</symbol>
        </error>
        <error id="syntaxError" severity="error" msg="Code &apos;classCamera{&apos; is invalid C code. Use --std or --language to configure the language." verbose="Code &apos;classCamera{&apos; is invalid C code. Use --std or --language to configure the language." file0="../../modules/complex/openGL_bounce.c">
            <location file="../../modules/complex/openGL_bounce.c" line="19" column="1"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/complex/openGL_example00.c">
            <location file="../../modules/complex/openGL_example00.c" line="32" column="11"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/complex/openGL_example00.c">
            <location file="../../modules/complex/openGL_example00.c" line="32" column="14"/>
            <symbol>y</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;data_&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;data_&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../modules/core/datatable.cpp">
            <location file="../../include/core/datatable.hpp" line="93" column="9"/>
            <symbol>data_</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;headers_&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;headers_&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../modules/core/datatable.cpp">
            <location file="../../include/core/datatable.hpp" line="94" column="9"/>
            <symbol>headers_</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Logger&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Logger&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="../../modules/core/datatable.cpp">
            <location file="../../include/core/utils.hpp" line="108" column="5"/>
            <symbol>Logger</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;num_omitted_rows&apos; can be reduced." verbose="The scope of the variable &apos;num_omitted_rows&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/core/datatable.cpp">
            <location file="../../include/core/datatable.hpp" line="221" column="13"/>
            <symbol>num_omitted_rows</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;year&apos; can be reduced." verbose="The scope of the variable &apos;year&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/core/datatable.cpp">
            <location file="../../modules/core/datatable.cpp" line="176" column="21"/>
            <symbol>year</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;month&apos; can be reduced." verbose="The scope of the variable &apos;month&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/core/datatable.cpp">
            <location file="../../modules/core/datatable.cpp" line="176" column="27"/>
            <symbol>month</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;time&apos; can be reduced." verbose="The scope of the variable &apos;time&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/core/datatable.cpp">
            <location file="../../modules/core/datatable.cpp" line="176" column="34"/>
            <symbol>time</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;filename&apos; should be passed by const reference." verbose="Parameter &apos;filename&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../modules/core/datatable.cpp">
            <location file="../../modules/core/datatable.cpp" line="59" column="45" info="Function parameter &apos;filename&apos; should be passed by const reference."/>
            <symbol>filename</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;group_by_columns&apos; should be passed by const reference." verbose="Parameter &apos;group_by_columns&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../modules/core/datatable.cpp">
            <location file="../../modules/core/datatable.cpp" line="252" column="58" info="Function parameter &apos;group_by_columns&apos; should be passed by const reference."/>
            <symbol>group_by_columns</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../modules/core/datatable.cpp">
            <location file="../../modules/core/datatable.cpp" line="285" column="23"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../modules/core/datatable.cpp">
            <location file="../../modules/core/datatable.cpp" line="311" column="22"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;num_omitted_rows&apos; is assigned a value that is never used." verbose="Variable &apos;num_omitted_rows&apos; is assigned a value that is never used." cwe="563" file0="../../modules/core/datatable.cpp">
            <location file="../../include/core/datatable.hpp" line="221" column="30"/>
            <symbol>num_omitted_rows</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;year&apos; can be reduced." verbose="The scope of the variable &apos;year&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/core/datatable1.cpp">
            <location file="../../modules/core/datatable1.cpp" line="375" column="21"/>
            <symbol>year</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;month&apos; can be reduced." verbose="The scope of the variable &apos;month&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/core/datatable1.cpp">
            <location file="../../modules/core/datatable1.cpp" line="375" column="27"/>
            <symbol>month</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;time&apos; can be reduced." verbose="The scope of the variable &apos;time&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/core/datatable1.cpp">
            <location file="../../modules/core/datatable1.cpp" line="375" column="34"/>
            <symbol>time</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;group_by_columns&apos; should be passed by const reference." verbose="Parameter &apos;group_by_columns&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../modules/core/datatable1.cpp">
            <location file="../../modules/core/datatable1.cpp" line="451" column="58" info="Function parameter &apos;group_by_columns&apos; should be passed by const reference."/>
            <symbol>group_by_columns</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../modules/core/datatable1.cpp">
            <location file="../../modules/core/datatable1.cpp" line="484" column="23"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../modules/core/datatable1.cpp">
            <location file="../../modules/core/datatable1.cpp" line="510" column="22"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;num_omitted_rows&apos; can be reduced." verbose="The scope of the variable &apos;num_omitted_rows&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../modules/core/datatable2.cpp">
            <location file="../../modules/core/datatable2.cpp" line="202" column="9"/>
            <symbol>num_omitted_rows</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="../../modules/core/datatable2.cpp">
            <location file="../../modules/core/datatable2.cpp" line="135" column="32"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/core/datatable2.cpp">
            <location file="../../modules/core/datatable2.cpp" line="686" column="32"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/core/datatable2.cpp">
            <location file="../../modules/core/datatable2.cpp" line="693" column="30"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Graph&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Graph&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="../../modules/disct/graphs.cpp">
            <location file="../../include/disct/graphs.hpp" line="58" column="5"/>
            <symbol>Graph</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="../../modules/disct/graphs.cpp">
            <location file="../../modules/disct/graphs.cpp" line="411" column="9"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="../../modules/disct/graphs.cpp">
            <location file="../../modules/disct/graphs.cpp" line="647" column="63"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../modules/disct/graphs.cpp">
            <location file="../../modules/disct/graphs.cpp" line="682" column="24"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../modules/disct/graphs.cpp">
            <location file="../../modules/disct/graphs.cpp" line="717" column="24"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;predecessors[w]&apos; is assigned a value that is never used." verbose="Variable &apos;predecessors[w]&apos; is assigned a value that is never used." cwe="563" file0="../../modules/disct/graphs.cpp">
            <location file="../../modules/disct/graphs.cpp" line="332" column="37"/>
            <symbol>predecessors[w]</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;A&apos; can be declared as pointer to const" verbose="Parameter &apos;A&apos; can be declared as pointer to const" cwe="398" file0="../../modules/linalg/_gpu_kernel_mtx_mul.c">
            <location file="../../modules/linalg/_gpu_kernel_mtx_mul.c" line="5" column="41" info="Parameter &apos;A&apos; can be declared as pointer to const"/>
            <symbol>A</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;B&apos; can be declared as pointer to const" verbose="Parameter &apos;B&apos; can be declared as pointer to const" cwe="398" file0="../../modules/linalg/_gpu_kernel_mtx_mul.c">
            <location file="../../modules/linalg/_gpu_kernel_mtx_mul.c" line="6" column="41" info="Parameter &apos;B&apos; can be declared as pointer to const"/>
            <symbol>B</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../modules/linalg/_gpu_mtx.cpp">
            <location file="../../modules/linalg/_gpu_mtx.cpp" line="102" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../modules/linalg/_gpu_mtx.cpp">
            <location file="../../modules/linalg/_gpu_mtx.cpp" line="171" column="53"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../modules/linalg/_gpu_mtx.cpp">
            <location file="../../modules/linalg/_gpu_mtx.cpp" line="172" column="53"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../modules/linalg/_gpu_mtx.cpp">
            <location file="../../modules/linalg/_gpu_mtx.cpp" line="185" column="56"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../modules/linalg/_gpu_mtx.cpp">
            <location file="../../modules/linalg/_gpu_mtx.cpp" line="186" column="57"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../modules/linalg/_gpu_mtx.cpp">
            <location file="../../modules/linalg/_gpu_mtx.cpp" line="187" column="57"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;vec&apos; can be declared as pointer to const" verbose="Parameter &apos;vec&apos; can be declared as pointer to const" cwe="398" file0="../../modules/linalg/_gpu_mtx_add.c">
            <location file="../../modules/linalg/_gpu_mtx_add.c" line="78" column="21" info="Parameter &apos;vec&apos; can be declared as pointer to const"/>
            <symbol>vec</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;v1&apos; can be declared as pointer to const" verbose="Parameter &apos;v1&apos; can be declared as pointer to const" cwe="398" file0="../../modules/linalg/_gpu_mtx_add.c">
            <location file="../../modules/linalg/_gpu_mtx_add.c" line="85" column="24" info="Parameter &apos;v1&apos; can be declared as pointer to const"/>
            <symbol>v1</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;v2&apos; can be declared as pointer to const" verbose="Parameter &apos;v2&apos; can be declared as pointer to const" cwe="398" file0="../../modules/linalg/_gpu_mtx_add.c">
            <location file="../../modules/linalg/_gpu_mtx_add.c" line="85" column="33" info="Parameter &apos;v2&apos; can be declared as pointer to const"/>
            <symbol>v2</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;fileName&apos; can be declared as const array" verbose="Variable &apos;fileName&apos; can be declared as const array" cwe="398" file0="../../modules/linalg/_gpu_mtx_add.c">
            <location file="../../modules/linalg/_gpu_mtx_add.c" line="155" column="10" info="Variable &apos;fileName&apos; can be declared as const array"/>
            <symbol>fileName</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: start" verbose="Unused variable: start" cwe="563" file0="../../modules/linalg/_gpu_mtx_add.c">
            <location file="../../modules/linalg/_gpu_mtx_add.c" line="99" column="20"/>
            <symbol>start</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: finish" verbose="Unused variable: finish" cwe="563" file0="../../modules/linalg/_gpu_mtx_add.c">
            <location file="../../modules/linalg/_gpu_mtx_add.c" line="99" column="27"/>
            <symbol>finish</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: duration" verbose="Unused variable: duration" cwe="563" file0="../../modules/linalg/_gpu_mtx_add.c">
            <location file="../../modules/linalg/_gpu_mtx_add.c" line="100" column="12"/>
            <symbol>duration</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: ret_num_devices" verbose="Unused variable: ret_num_devices" cwe="563" file0="../../modules/linalg/_gpu_mtx_add.c">
            <location file="../../modules/linalg/_gpu_mtx_add.c" line="143" column="13"/>
            <symbol>ret_num_devices</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: string" verbose="Unused variable: string" cwe="563" file0="../../modules/linalg/_gpu_mtx_add.c">
            <location file="../../modules/linalg/_gpu_mtx_add.c" line="153" column="10"/>
            <symbol>string</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;A&apos; can be declared as pointer to const" verbose="Parameter &apos;A&apos; can be declared as pointer to const" cwe="398" file0="../../modules/linalg/_gpu_mtx_kernel.c">
            <location file="../../modules/linalg/_gpu_mtx_kernel.c" line="17" column="41" info="Parameter &apos;A&apos; can be declared as pointer to const"/>
            <symbol>A</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;B&apos; can be declared as pointer to const" verbose="Parameter &apos;B&apos; can be declared as pointer to const" cwe="398" file0="../../modules/linalg/_gpu_mtx_kernel.c">
            <location file="../../modules/linalg/_gpu_mtx_kernel.c" line="18" column="41" info="Parameter &apos;B&apos; can be declared as pointer to const"/>
            <symbol>B</symbol>
        </error>
        <error id="selfInitialization" severity="error" msg="Member variable &apos;cols&apos; is initialized by itself." verbose="Member variable &apos;cols&apos; is initialized by itself." cwe="665" file0="../../modules/linalg/lao.cpp">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="78" column="9"/>
            <symbol>cols</symbol>
        </error>
        <error id="selfInitialization" severity="error" msg="Member variable &apos;rows&apos; is initialized by itself." verbose="Member variable &apos;rows&apos; is initialized by itself." cwe="665" file0="../../modules/linalg/lao.cpp">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="78" column="21"/>
            <symbol>rows</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;dimension=0&apos; is always false" verbose="Condition &apos;dimension=0&apos; is always false" cwe="570" file0="../../modules/linalg/lao.cpp">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="285" column="31" info="Condition &apos;dimension=0&apos; is always false"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;row&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;row&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="../../modules/linalg/lao.cpp">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="94" column="18" info="Unsigned positive"/>
            <symbol>row</symbol>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;col&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;col&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="../../modules/linalg/lao.cpp">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="95" column="18" info="Unsigned positive"/>
            <symbol>col</symbol>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;dimension&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;dimension&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="../../modules/linalg/lao.cpp">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="284" column="18" info="Unsigned positive"/>
            <symbol>dimension</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;target&apos; can be declared as reference to const" verbose="Parameter &apos;target&apos; can be declared as reference to const" cwe="398" file0="../../modules/linalg/lao.cpp">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="208" column="24" info="Parameter &apos;target&apos; can be declared as reference to const"/>
            <symbol>target</symbol>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;/&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="1417" column="36"/>
            <location file="../../modules/linalg/mtx.cpp" line="1416" column="22" info="&apos;rows&apos; is assigned value &apos;A.size()&apos; here."/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="1207" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="1204" column="27" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="1270" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="1267" column="27" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="222" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="220" column="27" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="255" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="253" column="26" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="298" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="294" column="27" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="335" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="332" column="27" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="369" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="366" column="26" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="405" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="401" column="23" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="435" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="432" column="23" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="759" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="757" column="27" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="792" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="790" column="26" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="834" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="830" column="27" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="867" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="864" column="23" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="897" column="19" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="894" column="26" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="932" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="928" column="23" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;c&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/linalg/mtx.cpp">
            <location file="../../modules/linalg/mtx.cpp" line="962" column="15" info="c is overwritten"/>
            <location file="../../modules/linalg/mtx.cpp" line="959" column="23" info="c is initialized"/>
            <symbol>c</symbol>
        </error>
        <error id="syntaxError" severity="error" msg="Code &apos;std::random_device&apos; is invalid C code. Use --std or --language to configure the language." verbose="Code &apos;std::random_device&apos; is invalid C code. Use --std or --language to configure the language." file0="../../modules/linalg/mtx_x86.c">
            <location file="../../modules/linalg/mtx_x86.c" line="9" column="5"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;weightsInputHidden&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;weightsInputHidden&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../modules/ml/TEST.cpp">
            <location file="../../modules/ml/TEST.cpp" line="58" column="9"/>
            <symbol>weightsInputHidden</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;weightsHiddenOutput&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;weightsHiddenOutput&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../modules/ml/TEST.cpp">
            <location file="../../modules/ml/TEST.cpp" line="61" column="9"/>
            <symbol>weightsHiddenOutput</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;output&apos; is assigned a value that is never used." verbose="Variable &apos;output&apos; is assigned a value that is never used." cwe="563" file0="../../modules/ml/TEST.cpp">
            <location file="../../modules/ml/TEST.cpp" line="258" column="32"/>
            <symbol>output</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;BayesClf&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;BayesClf&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="../../modules/ml/bayes_clf.cpp">
            <location file="../../include/ml/bayes_clf.hpp" line="83" column="5"/>
            <symbol>BayesClf</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;BayesBernoulli&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;BayesBernoulli&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="../../modules/ml/bayes_clf.cpp">
            <location file="../../include/ml/bayes_clf.hpp" line="134" column="5"/>
            <symbol>BayesBernoulli</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;BayesMultiNom&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;BayesMultiNom&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="../../modules/ml/bayes_clf.cpp">
            <location file="../../include/ml/bayes_clf.hpp" line="285" column="5"/>
            <symbol>BayesMultiNom</symbol>
        </error>
        <error id="stlFindInsert" severity="performance" msg="Searching before insertion is not necessary. Instead of &apos;feature_probs[label]=std::vector&lt;double&gt;(features.size(),0.0)&apos; consider using &apos;feature_probs.try_emplace(label, std::vector&lt;double&gt;(features.size(),0.0));&apos;." verbose="Searching before insertion is not necessary. Instead of &apos;feature_probs[label]=std::vector&lt;double&gt;(features.size(),0.0)&apos; consider using &apos;feature_probs.try_emplace(label, std::vector&lt;double&gt;(features.size(),0.0));&apos;." cwe="398" file0="../../modules/ml/bayes_clf.cpp">
            <location file="../../modules/ml/bayes_clf.cpp" line="69" column="55"/>
        </error>
        <error id="stlFindInsert" severity="performance" msg="Searching before insertion is not necessary. Instead of &apos;mean[label]=std::vector&lt;double&gt;(num_features,0.0)&apos; consider using &apos;mean.try_emplace(label, std::vector&lt;double&gt;(num_features,0.0));&apos;." verbose="Searching before insertion is not necessary. Instead of &apos;mean[label]=std::vector&lt;double&gt;(num_features,0.0)&apos; consider using &apos;mean.try_emplace(label, std::vector&lt;double&gt;(num_features,0.0));&apos;." cwe="398" file0="../../modules/ml/bayes_clf.cpp">
            <location file="../../modules/ml/bayes_clf.cpp" line="259" column="46"/>
        </error>
        <error id="stlFindInsert" severity="performance" msg="Searching before insertion is not necessary. Instead of &apos;feature_probs[label]=std::vector&lt;double&gt;(num_features,0.0)&apos; consider using &apos;feature_probs.try_emplace(label, std::vector&lt;double&gt;(num_features,0.0));&apos;." verbose="Searching before insertion is not necessary. Instead of &apos;feature_probs[label]=std::vector&lt;double&gt;(num_features,0.0)&apos; consider using &apos;feature_probs.try_emplace(label, std::vector&lt;double&gt;(num_features,0.0));&apos;." cwe="398" file0="../../modules/ml/bayes_clf.cpp">
            <location file="../../modules/ml/bayes_clf.cpp" line="375" column="55"/>
        </error>
        <error id="unpreciseMathCall" severity="style" msg="Expression &apos;log(1 + x)&apos; can be replaced by &apos;log1p(x)&apos; to avoid loss of precision." verbose="Expression &apos;log(1 + x)&apos; can be replaced by &apos;log1p(x)&apos; to avoid loss of precision." cwe="758" file0="../../modules/ml/encoder.cpp">
            <location file="../../modules/ml/encoder.cpp" line="410" column="52"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../modules/ml/encoder.cpp">
            <location file="../../modules/ml/encoder.cpp" line="121" column="16"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: generator" verbose="Unused variable: generator" cwe="563" file0="../../modules/ml/encoder.cpp">
            <location file="../../modules/ml/encoder.cpp" line="556" column="32"/>
            <symbol>generator</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;k-foldCV.h&quot; not found." verbose="Include file: &quot;k-foldCV.h&quot; not found.">
            <location file="../../modules/ml/k-foldCV.cpp" line="38" column="0"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;small_sample&apos; is assigned a value that is never used." verbose="Variable &apos;small_sample&apos; is assigned a value that is never used." cwe="563" file0="../../modules/ml/k-foldCV.cpp">
            <location file="../../modules/ml/k-foldCV.cpp" line="42" column="33"/>
            <symbol>small_sample</symbol>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;data_size&apos; shadows outer function" verbose="Local variable &apos;data_size&apos; shadows outer function" cwe="398" file0="../../modules/ml/linreg.cpp">
            <location file="../../modules/ml/linreg.cpp" line="291" column="12" info="Shadow variable"/>
            <location file="../../include/ml/linreg.hpp" line="104" column="13" info="Shadowed declaration"/>
            <symbol>data_size</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;coeff&apos; shadows outer variable" verbose="Local variable &apos;coeff&apos; shadows outer variable" cwe="398" file0="../../modules/ml/linreg.cpp">
            <location file="../../modules/ml/linreg.cpp" line="364" column="17" info="Shadow variable"/>
            <location file="../../include/ml/linreg.hpp" line="60" column="17" info="Shadowed declaration"/>
            <symbol>coeff</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;constant&apos; shadows outer variable" verbose="Local variable &apos;constant&apos; shadows outer variable" cwe="398" file0="../../modules/ml/linreg.cpp">
            <location file="../../modules/ml/linreg.cpp" line="366" column="17" info="Shadow variable"/>
            <location file="../../include/ml/linreg.hpp" line="62" column="17" info="Shadowed declaration"/>
            <symbol>constant</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;PrimaryMLP&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;PrimaryMLP&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../modules/ml/mlp_network.cpp">
            <location file="../../modules/ml/mlp_network.cpp" line="71" column="5"/>
            <symbol>PrimaryMLP</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;PrimaryMLP&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;PrimaryMLP&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../modules/ml/mlp_network.cpp">
            <location file="../../modules/ml/mlp_network.cpp" line="71" column="5"/>
            <symbol>PrimaryMLP</symbol>
        </error>
        <error id="funcArgOrderDifferent" severity="warning" msg="Function &apos;rand_int&apos; argument order different: declaration &apos;low, hi&apos; definition &apos;hi, low&apos;" verbose="Function &apos;rand_int&apos; argument order different: declaration &apos;low, hi&apos; definition &apos;hi, low&apos;" cwe="683" file0="../../modules/ml/mlp_network.cpp">
            <location file="../../modules/ml/mlp_network.cpp" line="54" column="48"/>
            <location file="../../include/ml/mlp_net.hpp" line="91" column="30"/>
            <symbol>rand_int</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;npl&apos; can be declared as const array" verbose="Parameter &apos;npl&apos; can be declared as const array" cwe="398" file0="../../modules/ml/mlp_network.cpp">
            <location file="../../modules/ml/mlp_network.cpp" line="64" column="54" info="Parameter &apos;npl&apos; can be declared as const array"/>
            <symbol>npl</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;y&apos; is assigned a value that is never used." verbose="Variable &apos;y&apos; is assigned a value that is never used." cwe="563" file0="../../modules/ml/mlp_network.cpp">
            <location file="../../include/ml/mlp_net.hpp" line="248" column="16"/>
            <symbol>y</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;../../include/ml/naive_network.hpp&quot; not found." verbose="Include file: &quot;../../include/ml/naive_network.hpp&quot; not found.">
            <location file="../../modules/ml/naive_network.cpp" line="37" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;../../include/linalg/matrices.hpp&quot; not found." verbose="Include file: &quot;../../include/linalg/matrices.hpp&quot; not found.">
            <location file="../../modules/ml/naive_network.cpp" line="38" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;k-NN.h&quot; not found." verbose="Include file: &quot;k-NN.h&quot; not found.">
            <location file="../../modules/ml/nearest_neighbors.cpp" line="34" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CSVReader&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CSVReader&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="../../modules/ml/nearest_neighbors.cpp">
            <location file="../../modules/ml/nearest_neighbors.cpp" line="87" column="5"/>
            <symbol>CSVReader</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;x==-1&apos; is always false" verbose="Condition &apos;x==-1&apos; is always false" cwe="570" file0="../../modules/ml/nearest_neighbors.cpp">
            <location file="../../modules/ml/nearest_neighbors.cpp" line="122" column="23" info="Condition &apos;x==-1&apos; is always false"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;target&apos; should be passed by const reference." verbose="Parameter &apos;target&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../modules/ml/nearest_neighbors.cpp">
            <location file="../../modules/ml/nearest_neighbors.cpp" line="115" column="33" info="Function parameter &apos;target&apos; should be passed by const reference."/>
            <symbol>target</symbol>
        </error>
        <error id="iterateByValue" severity="performance" msg="Range variable &apos;line&apos; should be declared as const reference." verbose="Variable &apos;line&apos; is used to iterate by value. It could be declared as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../modules/ml/nearest_neighbors.cpp">
            <location file="../../modules/ml/nearest_neighbors.cpp" line="196" column="25" info="Range variable &apos;line&apos; should be declared as const reference."/>
            <symbol>line</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;c&apos; can be declared as reference to const" verbose="Parameter &apos;c&apos; can be declared as reference to const" cwe="398" file0="../../modules/ml/nearest_neighbors.cpp">
            <location file="../../modules/ml/nearest_neighbors.cpp" line="71" column="46" info="Parameter &apos;c&apos; can be declared as reference to const"/>
            <symbol>c</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;lhs&apos; can be declared as reference to const. However it seems that &apos;comparison&apos; is a callback function, if &apos;lhs&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;lhs&apos; can be declared as reference to const. However it seems that &apos;comparison&apos; is a callback function, if &apos;lhs&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="../../modules/ml/nearest_neighbors.cpp">
            <location file="../../modules/ml/nearest_neighbors.cpp" line="137" column="26" info="Parameter &apos;lhs&apos; can be declared as reference to const"/>
            <location file="../../modules/ml/nearest_neighbors.cpp" line="167" column="36" info="You might need to cast the function pointer here"/>
            <symbol>lhs</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;rhs&apos; can be declared as reference to const. However it seems that &apos;comparison&apos; is a callback function, if &apos;rhs&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;rhs&apos; can be declared as reference to const. However it seems that &apos;comparison&apos; is a callback function, if &apos;rhs&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="../../modules/ml/nearest_neighbors.cpp">
            <location file="../../modules/ml/nearest_neighbors.cpp" line="137" column="40" info="Parameter &apos;rhs&apos; can be declared as reference to const"/>
            <location file="../../modules/ml/nearest_neighbors.cpp" line="167" column="36" info="You might need to cast the function pointer here"/>
            <symbol>rhs</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;lhs&apos; can be declared as reference to const. However it seems that &apos;euclideanDistance&apos; is a callback function, if &apos;lhs&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;lhs&apos; can be declared as reference to const. However it seems that &apos;euclideanDistance&apos; is a callback function, if &apos;lhs&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="../../modules/ml/nearest_neighbors.cpp">
            <location file="../../modules/ml/nearest_neighbors.cpp" line="141" column="40" info="Parameter &apos;lhs&apos; can be declared as reference to const"/>
            <location file="../../modules/ml/nearest_neighbors.cpp" line="211" column="29" info="You might need to cast the function pointer here"/>
            <symbol>lhs</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;test&apos; can be declared as reference to const. However it seems that &apos;euclideanDistance&apos; is a callback function, if &apos;test&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;test&apos; can be declared as reference to const. However it seems that &apos;euclideanDistance&apos; is a callback function, if &apos;test&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="../../modules/ml/nearest_neighbors.cpp">
            <location file="../../modules/ml/nearest_neighbors.cpp" line="141" column="54" info="Parameter &apos;test&apos; can be declared as reference to const"/>
            <location file="../../modules/ml/nearest_neighbors.cpp" line="211" column="29" info="You might need to cast the function pointer here"/>
            <symbol>test</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;lhs&apos; can be declared as reference to const" verbose="Parameter &apos;lhs&apos; can be declared as reference to const" cwe="398" file0="../../modules/ml/nearest_neighbors.cpp">
            <location file="../../modules/ml/nearest_neighbors.cpp" line="146" column="40" info="Parameter &apos;lhs&apos; can be declared as reference to const"/>
            <symbol>lhs</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;test&apos; can be declared as reference to const" verbose="Parameter &apos;test&apos; can be declared as reference to const" cwe="398" file0="../../modules/ml/nearest_neighbors.cpp">
            <location file="../../modules/ml/nearest_neighbors.cpp" line="146" column="54" info="Parameter &apos;test&apos; can be declared as reference to const"/>
            <symbol>test</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;plaintext&apos; should be passed by const reference." verbose="Parameter &apos;plaintext&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../modules/nt/cipher.cpp">
            <location file="../../modules/nt/cipher.cpp" line="46" column="46" info="Function parameter &apos;plaintext&apos; should be passed by const reference."/>
            <symbol>plaintext</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;key&apos; should be passed by const reference." verbose="Parameter &apos;key&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../modules/nt/cipher.cpp">
            <location file="../../modules/nt/cipher.cpp" line="63" column="54" info="Function parameter &apos;key&apos; should be passed by const reference."/>
            <symbol>key</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;plaintext&apos; should be passed by const reference." verbose="Parameter &apos;plaintext&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../modules/nt/cipher.cpp">
            <location file="../../modules/nt/cipher.cpp" line="99" column="47" info="Function parameter &apos;plaintext&apos; should be passed by const reference."/>
            <symbol>plaintext</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;encoded_text&apos; should be passed by const reference." verbose="Parameter &apos;encoded_text&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../modules/nt/cipher.cpp">
            <location file="../../modules/nt/cipher.cpp" line="100" column="47" info="Function parameter &apos;encoded_text&apos; should be passed by const reference."/>
            <symbol>encoded_text</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;nb_threads_hint==0&apos; is always false" verbose="Condition &apos;nb_threads_hint==0&apos; is always false" cwe="570" file0="../../modules/nt/factorization.cpp">
            <location file="../../include/core/threads.hpp" line="247" column="43" info="Condition &apos;nb_threads_hint==0&apos; is always false"/>
            <location file="../../include/core/threads.hpp" line="246" column="32" info="Assignment &apos;nb_threads_hint=10&apos;, assigned value is 10"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;x&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;x&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/nt/logarithms.cpp">
            <location file="../../modules/nt/logarithms.cpp" line="63" column="7" info="x is overwritten"/>
            <location file="../../modules/nt/logarithms.cpp" line="59" column="16" info="x is initialized"/>
            <symbol>x</symbol>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;is_prime&apos; shadows outer function" verbose="Local variable &apos;is_prime&apos; shadows outer function" cwe="398" file0="../../modules/nt/prime_test.cpp">
            <location file="../../modules/nt/prime_test.cpp" line="257" column="18" info="Shadow variable"/>
            <location file="../../include/nt/prime_test.hpp" line="59" column="10" info="Shadowed declaration"/>
            <symbol>is_prime</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;LCG&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;LCG&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="../../modules/nt/random.cpp">
            <location file="../../include/nt/random.hpp" line="90" column="5"/>
            <symbol>LCG</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../modules/nt/rc4.cpp">
            <location file="../../modules/nt/rc4.cpp" line="119" column="25"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;swapped&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;swapped&apos;. The initialized value is overwritten before it is read." cwe="563" file0="../../modules/nt/rc4.cpp">
            <location file="../../modules/nt/rc4.cpp" line="51" column="13" info="swapped is overwritten"/>
            <location file="../../modules/nt/rc4.cpp" line="50" column="21" info="swapped is initialized"/>
            <symbol>swapped</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;key&apos; can be declared as pointer to const" verbose="Parameter &apos;key&apos; can be declared as pointer to const" cwe="398" file0="../../modules/nt/rc4.cpp">
            <location file="../../modules/nt/rc4.cpp" line="68" column="27" info="Parameter &apos;key&apos; can be declared as pointer to const"/>
            <symbol>key</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;plaintext&apos; can be declared as pointer to const" verbose="Parameter &apos;plaintext&apos; can be declared as pointer to const" cwe="398" file0="../../modules/nt/rc4.cpp">
            <location file="../../modules/nt/rc4.cpp" line="91" column="28" info="Parameter &apos;plaintext&apos; can be declared as pointer to const"/>
            <symbol>plaintext</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;plaintext&apos; can be declared as pointer to const" verbose="Parameter &apos;plaintext&apos; can be declared as pointer to const" cwe="398" file0="../../modules/nt/rc4.cpp">
            <location file="../../modules/nt/rc4.cpp" line="117" column="29" info="Parameter &apos;plaintext&apos; can be declared as pointer to const"/>
            <symbol>plaintext</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;hashtext&apos; can be declared as pointer to const" verbose="Parameter &apos;hashtext&apos; can be declared as pointer to const" cwe="398" file0="../../modules/nt/rc4.cpp">
            <location file="../../modules/nt/rc4.cpp" line="117" column="55" info="Parameter &apos;hashtext&apos; can be declared as pointer to const"/>
            <symbol>hashtext</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;../../include/number_theory/rc5.hpp&quot; not found." verbose="Include file: &quot;../../include/number_theory/rc5.hpp&quot; not found.">
            <location file="../../modules/nt/rc5.cpp" line="34" column="0"/>
        </error>
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="../../modules/nt/rc5.cpp">
            <location file="../../modules/nt/rc5.cpp" line="40" column="1"/>
        </error>
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="../../modules/nt/rc5.cpp">
            <location file="../../modules/nt/rc5.cpp" line="43" column="1"/>
        </error>
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="../../modules/nt/rc5.cpp">
            <location file="../../modules/nt/rc5.cpp" line="46" column="1"/>
        </error>
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="../../modules/nt/rc5.cpp">
            <location file="../../modules/nt/rc5.cpp" line="49" column="1"/>
        </error>
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="../../modules/nt/rc5.cpp">
            <location file="../../modules/nt/rc5.cpp" line="63" column="1"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;arr_add&apos; is never used." verbose="The function &apos;arr_add&apos; is never used." cwe="561">
            <location file="../../include/arithmetic.hpp" line="68" column="0"/>
            <symbol>arr_add</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;arr_sub&apos; is never used." verbose="The function &apos;arr_sub&apos; is never used." cwe="561">
            <location file="../../include/arithmetic.hpp" line="77" column="0"/>
            <symbol>arr_sub</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;arr_mlt&apos; is never used." verbose="The function &apos;arr_mlt&apos; is never used." cwe="561">
            <location file="../../include/arithmetic.hpp" line="86" column="0"/>
            <symbol>arr_mlt</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;dispatch&apos; is never used." verbose="The function &apos;dispatch&apos; is never used." cwe="561">
            <location file="../../include/core/threads.hpp" line="217" column="0"/>
            <symbol>dispatch</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;parallel_for&apos; is never used." verbose="The function &apos;parallel_for&apos; is never used." cwe="561">
            <location file="../../include/core/threads.hpp" line="242" column="0"/>
            <symbol>parallel_for</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;sqr_err&apos; is never used." verbose="The function &apos;sqr_err&apos; is never used." cwe="561">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="155" column="0"/>
            <symbol>sqr_err</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;scalar_add&apos; is never used." verbose="The function &apos;scalar_add&apos; is never used." cwe="561">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="183" column="0"/>
            <symbol>scalar_add</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;all&apos; is never used." verbose="The function &apos;all&apos; is never used." cwe="561">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="235" column="0"/>
            <symbol>all</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;mean&apos; is never used." verbose="The function &apos;mean&apos; is never used." cwe="561">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="304" column="0"/>
            <symbol>mean</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;concatenate&apos; is never used." verbose="The function &apos;concatenate&apos; is never used." cwe="561">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="320" column="0"/>
            <symbol>concatenate</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;diag&apos; is never used." verbose="The function &apos;diag&apos; is never used." cwe="561">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="351" column="0"/>
            <symbol>diag</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;apply_func&apos; is never used." verbose="The function &apos;apply_func&apos; is never used." cwe="561">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="368" column="0"/>
            <symbol>apply_func</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;print_shape&apos; is never used." verbose="The function &apos;print_shape&apos; is never used." cwe="561">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="379" column="0"/>
            <symbol>print_shape</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;print_mtx&apos; is never used." verbose="The function &apos;print_mtx&apos; is never used." cwe="561">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="384" column="0"/>
            <symbol>print_mtx</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;zeros&apos; is never used." verbose="The function &apos;zeros&apos; is never used." cwe="561">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="412" column="0"/>
            <symbol>zeros</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ones&apos; is never used." verbose="The function &apos;ones&apos; is never used." cwe="561">
            <location file="../../include/linalg/mtx_tmpl.hpp" line="419" column="0"/>
            <symbol>ones</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;prop_forwards&apos; is never used." verbose="The function &apos;prop_forwards&apos; is never used." cwe="561">
            <location file="../../include/ml/mlp_net.hpp" line="221" column="0"/>
            <symbol>prop_forwards</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;prop_backwards&apos; is never used." verbose="The function &apos;prop_backwards&apos; is never used." cwe="561">
            <location file="../../include/ml/mlp_net.hpp" line="245" column="0"/>
            <symbol>prop_backwards</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;greatest_power&apos; is never used." verbose="The function &apos;greatest_power&apos; is never used." cwe="561">
            <location file="../../modules/arithmetic/arith.cpp" line="40" column="0"/>
            <symbol>greatest_power</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;chain_rule&apos; is never used." verbose="The function &apos;chain_rule&apos; is never used." cwe="561">
            <location file="../../modules/calculus/differential.cpp" line="81" column="0"/>
            <symbol>chain_rule</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;nth_derivative&apos; is never used." verbose="The function &apos;nth_derivative&apos; is never used." cwe="561">
            <location file="../../modules/calculus/differential.cpp" line="105" column="0"/>
            <symbol>nth_derivative</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;eval&apos; is never used." verbose="The function &apos;eval&apos; is never used." cwe="561">
            <location file="../../modules/calculus/differential.cpp" line="113" column="0"/>
            <symbol>eval</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;limit_at&apos; is never used." verbose="The function &apos;limit_at&apos; is never used." cwe="561">
            <location file="../../modules/calculus/differential.cpp" line="121" column="0"/>
            <symbol>limit_at</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;limit_at_infinity&apos; is never used." verbose="The function &apos;limit_at_infinity&apos; is never used." cwe="561">
            <location file="../../modules/calculus/differential.cpp" line="131" column="0"/>
            <symbol>limit_at_infinity</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;csv_read&apos; is never used." verbose="The function &apos;csv_read&apos; is never used." cwe="561">
            <location file="../../modules/core/datatable.cpp" line="59" column="0"/>
            <symbol>csv_read</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;datetime&apos; is never used." verbose="The function &apos;datetime&apos; is never used." cwe="561">
            <location file="../../modules/core/datatable.cpp" line="149" column="0"/>
            <symbol>datetime</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;group_by&apos; is never used." verbose="The function &apos;group_by&apos; is never used." cwe="561">
            <location file="../../modules/core/datatable.cpp" line="252" column="0"/>
            <symbol>group_by</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;str_to_int&apos; is never used." verbose="The function &apos;str_to_int&apos; is never used." cwe="561">
            <location file="../../modules/core/datatable.cpp" line="349" column="0"/>
            <symbol>str_to_int</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;str_to_double&apos; is never used." verbose="The function &apos;str_to_double&apos; is never used." cwe="561">
            <location file="../../modules/core/datatable.cpp" line="372" column="0"/>
            <symbol>str_to_double</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;map_file&apos; is never used." verbose="The function &apos;map_file&apos; is never used." cwe="561">
            <location file="../../modules/core/datatable2.cpp" line="76" column="0"/>
            <symbol>map_file</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setLogLevel&apos; is never used." verbose="The function &apos;setLogLevel&apos; is never used." cwe="561">
            <location file="../../modules/core/utils.cpp" line="57" column="0"/>
            <symbol>setLogLevel</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;enableTimestamps&apos; is never used." verbose="The function &apos;enableTimestamps&apos; is never used." cwe="561">
            <location file="../../modules/core/utils.cpp" line="61" column="0"/>
            <symbol>enableTimestamps</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setLogDestination&apos; is never used." verbose="The function &apos;setLogDestination&apos; is never used." cwe="561">
            <location file="../../modules/core/utils.cpp" line="65" column="0"/>
            <symbol>setLogDestination</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;setLogFile&apos; is never used." verbose="The function &apos;setLogFile&apos; is never used." cwe="561">
            <location file="../../modules/core/utils.cpp" line="69" column="0"/>
            <symbol>setLogFile</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;dfs&apos; is never used." verbose="The function &apos;dfs&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="55" column="0"/>
            <symbol>dfs</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;bfs&apos; is never used." verbose="The function &apos;bfs&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="71" column="0"/>
            <symbol>bfs</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;bellman_ford&apos; is never used." verbose="The function &apos;bellman_ford&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="122" column="0"/>
            <symbol>bellman_ford</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kruskal&apos; is never used." verbose="The function &apos;kruskal&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="145" column="0"/>
            <symbol>kruskal</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;floyd_warshall&apos; is never used." verbose="The function &apos;floyd_warshall&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="176" column="0"/>
            <symbol>floyd_warshall</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;topo_sort&apos; is never used." verbose="The function &apos;topo_sort&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="215" column="0"/>
            <symbol>topo_sort</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;connected_components&apos; is never used." verbose="The function &apos;connected_components&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="260" column="0"/>
            <symbol>connected_components</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;is_bipartite&apos; is never used." verbose="The function &apos;is_bipartite&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="275" column="0"/>
            <symbol>is_bipartite</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;betweenness_centrality&apos; is never used." verbose="The function &apos;betweenness_centrality&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="304" column="0"/>
            <symbol>betweenness_centrality</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;has_hamiltonian_circuit&apos; is never used." verbose="The function &apos;has_hamiltonian_circuit&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="373" column="0"/>
            <symbol>has_hamiltonian_circuit</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;has_eulerian_path&apos; is never used." verbose="The function &apos;has_eulerian_path&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="387" column="0"/>
            <symbol>has_eulerian_path</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;radius&apos; is never used." verbose="The function &apos;radius&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="462" column="0"/>
            <symbol>radius</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;chromatic_number&apos; is never used." verbose="The function &apos;chromatic_number&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="473" column="0"/>
            <symbol>chromatic_number</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;greedy_coloring&apos; is never used." verbose="The function &apos;greedy_coloring&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="517" column="0"/>
            <symbol>greedy_coloring</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;match_cardinality&apos; is never used." verbose="The function &apos;match_cardinality&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="541" column="0"/>
            <symbol>match_cardinality</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;match_wt&apos; is never used." verbose="The function &apos;match_wt&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="563" column="0"/>
            <symbol>match_wt</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;is_planar&apos; is never used." verbose="The function &apos;is_planar&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="595" column="0"/>
            <symbol>is_planar</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;planar_gen&apos; is never used." verbose="The function &apos;planar_gen&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="603" column="0"/>
            <symbol>planar_gen</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;compress&apos; is never used." verbose="The function &apos;compress&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="699" column="0"/>
            <symbol>compress</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;decompress&apos; is never used." verbose="The function &apos;decompress&apos; is never used." cwe="561">
            <location file="../../modules/disct/graphs.cpp" line="725" column="0"/>
            <symbol>decompress</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;add_vec_gpu&apos; is never used." verbose="The function &apos;add_vec_gpu&apos; is never used." cwe="561">
            <location file="../../modules/linalg/_gpu_kernel_mtx_add.c" line="4" column="0"/>
            <symbol>add_vec_gpu</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;matrixMul&apos; is never used." verbose="The function &apos;matrixMul&apos; is never used." cwe="561">
            <location file="../../modules/linalg/_gpu_kernel_mtx_mul.c" line="4" column="0"/>
            <symbol>matrixMul</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;mtx_add_f90&apos; is never used." verbose="The function &apos;mtx_add_f90&apos; is never used." cwe="561">
            <location file="../../modules/linalg/mtx.cpp" line="70" column="0"/>
            <symbol>mtx_add_f90</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;mtx_mult&apos; is never used." verbose="The function &apos;mtx_mult&apos; is never used." cwe="561">
            <location file="../../modules/linalg/mtx.cpp" line="449" column="0"/>
            <symbol>mtx_mult</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;mtx_add&apos; is never used." verbose="The function &apos;mtx_add&apos; is never used." cwe="561">
            <location file="../../modules/linalg/mtx.cpp" line="1157" column="0"/>
            <symbol>mtx_add</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;mtx_sub&apos; is never used." verbose="The function &apos;mtx_sub&apos; is never used." cwe="561">
            <location file="../../modules/linalg/mtx.cpp" line="1221" column="0"/>
            <symbol>mtx_sub</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;mtx_tpose&apos; is never used." verbose="The function &apos;mtx_tpose&apos; is never used." cwe="561">
            <location file="../../modules/linalg/mtx.cpp" line="1284" column="0"/>
            <symbol>mtx_tpose</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;std_mtx_sub&apos; is never used." verbose="The function &apos;std_mtx_sub&apos; is never used." cwe="561">
            <location file="../../modules/linalg/mtx.cpp" line="1479" column="0"/>
            <symbol>std_mtx_sub</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;std_mtx_mult&apos; is never used." verbose="The function &apos;std_mtx_mult&apos; is never used." cwe="561">
            <location file="../../modules/linalg/mtx.cpp" line="1510" column="0"/>
            <symbol>std_mtx_mult</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;train&apos; is never used." verbose="The function &apos;train&apos; is never used." cwe="561">
            <location file="../../modules/ml/bayes_clf.cpp" line="53" column="0"/>
            <symbol>train</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;save&apos; is never used." verbose="The function &apos;save&apos; is never used." cwe="561">
            <location file="../../modules/ml/encoder.cpp" line="42" column="0"/>
            <symbol>save</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;load&apos; is never used." verbose="The function &apos;load&apos; is never used." cwe="561">
            <location file="../../modules/ml/encoder.cpp" line="60" column="0"/>
            <symbol>load</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;lrate_set&apos; is never used." verbose="The function &apos;lrate_set&apos; is never used." cwe="561">
            <location file="../../modules/ml/encoder.cpp" line="78" column="0"/>
            <symbol>lrate_set</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;lrate_update&apos; is never used." verbose="The function &apos;lrate_update&apos; is never used." cwe="561">
            <location file="../../modules/ml/encoder.cpp" line="82" column="0"/>
            <symbol>lrate_update</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;data_size&apos; is never used." verbose="The function &apos;data_size&apos; is never used." cwe="561">
            <location file="../../modules/ml/linreg.cpp" line="89" column="0"/>
            <symbol>data_size</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;best_fit&apos; is never used." verbose="The function &apos;best_fit&apos; is never used." cwe="561">
            <location file="../../modules/ml/linreg.cpp" line="110" column="0"/>
            <symbol>best_fit</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_input&apos; is never used." verbose="The function &apos;get_input&apos; is never used." cwe="561">
            <location file="../../modules/ml/linreg.cpp" line="156" column="0"/>
            <symbol>get_input</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;split_data&apos; is never used." verbose="The function &apos;split_data&apos; is never used." cwe="561">
            <location file="../../modules/ml/linreg.cpp" line="278" column="0"/>
            <symbol>split_data</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;show_data&apos; is never used." verbose="The function &apos;show_data&apos; is never used." cwe="561">
            <location file="../../modules/ml/linreg.cpp" line="336" column="0"/>
            <symbol>show_data</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;error_in&apos; is never used." verbose="The function &apos;error_in&apos; is never used." cwe="561">
            <location file="../../modules/ml/linreg.cpp" line="371" column="0"/>
            <symbol>error_in</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;error_square&apos; is never used." verbose="The function &apos;error_square&apos; is never used." cwe="561">
            <location file="../../modules/ml/linreg.cpp" line="396" column="0"/>
            <symbol>error_square</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;mse&apos; is never used." verbose="The function &apos;mse&apos; is never used." cwe="561">
            <location file="../../modules/ml/linreg.cpp" line="410" column="0"/>
            <symbol>mse</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;r_sqrd&apos; is never used." verbose="The function &apos;r_sqrd&apos; is never used." cwe="561">
            <location file="../../modules/ml/linreg.cpp" line="436" column="0"/>
            <symbol>r_sqrd</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;rand_init&apos; is never used." verbose="The function &apos;rand_init&apos; is never used." cwe="561">
            <location file="../../modules/ml/mlp_network.cpp" line="48" column="0"/>
            <symbol>rand_init</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;rand_int&apos; is never used." verbose="The function &apos;rand_int&apos; is never used." cwe="561">
            <location file="../../modules/ml/mlp_network.cpp" line="54" column="0"/>
            <symbol>rand_int</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;rand_real&apos; is never used." verbose="The function &apos;rand_real&apos; is never used." cwe="561">
            <location file="../../modules/ml/mlp_network.cpp" line="59" column="0"/>
            <symbol>rand_real</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;manhattanDistance&apos; is never used." verbose="The function &apos;manhattanDistance&apos; is never used." cwe="561">
            <location file="../../modules/ml/nearest_neighbors.cpp" line="146" column="0"/>
            <symbol>manhattanDistance</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;caesar&apos; is never used." verbose="The function &apos;caesar&apos; is never used." cwe="561">
            <location file="../../modules/nt/cipher.cpp" line="46" column="0"/>
            <symbol>caesar</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;keyword_encode&apos; is never used." verbose="The function &apos;keyword_encode&apos; is never used." cwe="561">
            <location file="../../modules/nt/cipher.cpp" line="63" column="0"/>
            <symbol>keyword_encode</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;keyword&apos; is never used." verbose="The function &apos;keyword&apos; is never used." cwe="561">
            <location file="../../modules/nt/cipher.cpp" line="99" column="0"/>
            <symbol>keyword</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;pollard_rho_log&apos; is never used." verbose="The function &apos;pollard_rho_log&apos; is never used." cwe="561">
            <location file="../../modules/nt/logarithms.cpp" line="58" column="0"/>
            <symbol>pollard_rho_log</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;BSGS&apos; is never used." verbose="The function &apos;BSGS&apos; is never used." cwe="561">
            <location file="../../modules/nt/logarithms.cpp" line="98" column="0"/>
            <symbol>BSGS</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;sieve_of_eratosthenes&apos; is never used." verbose="The function &apos;sieve_of_eratosthenes&apos; is never used." cwe="561">
            <location file="../../modules/nt/prime_gen.cpp" line="51" column="0"/>
            <symbol>sieve_of_eratosthenes</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;is_prime&apos; is never used." verbose="The function &apos;is_prime&apos; is never used." cwe="561">
            <location file="../../modules/nt/prime_test.cpp" line="104" column="0"/>
            <symbol>is_prime</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;compute_miller_rabin&apos; is never used." verbose="The function &apos;compute_miller_rabin&apos; is never used." cwe="561">
            <location file="../../modules/nt/prime_test.cpp" line="121" column="0"/>
            <symbol>compute_miller_rabin</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;miller_rabin&apos; is never used." verbose="The function &apos;miller_rabin&apos; is never used." cwe="561">
            <location file="../../modules/nt/prime_test.cpp" line="209" column="0"/>
            <symbol>miller_rabin</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;AKS&apos; is never used." verbose="The function &apos;AKS&apos; is never used." cwe="561">
            <location file="../../modules/nt/prime_test.cpp" line="228" column="0"/>
            <symbol>AKS</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;solovoy_strassen&apos; is never used." verbose="The function &apos;solovoy_strassen&apos; is never used." cwe="561">
            <location file="../../modules/nt/prime_test.cpp" line="327" column="0"/>
            <symbol>solovoy_strassen</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;carmichael_num&apos; is never used." verbose="The function &apos;carmichael_num&apos; is never used." cwe="561">
            <location file="../../modules/nt/prime_test.cpp" line="351" column="0"/>
            <symbol>carmichael_num</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ETF&apos; is never used." verbose="The function &apos;ETF&apos; is never used." cwe="561">
            <location file="../../modules/nt/prime_test.cpp" line="410" column="0"/>
            <symbol>ETF</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;seed&apos; is never used." verbose="The function &apos;seed&apos; is never used." cwe="561">
            <location file="../../modules/nt/random.cpp" line="67" column="0"/>
            <symbol>seed</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_multiplier&apos; is never used." verbose="The function &apos;get_multiplier&apos; is never used." cwe="561">
            <location file="../../modules/nt/random.cpp" line="72" column="0"/>
            <symbol>get_multiplier</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_increment&apos; is never used." verbose="The function &apos;get_increment&apos; is never used." cwe="561">
            <location file="../../modules/nt/random.cpp" line="76" column="0"/>
            <symbol>get_increment</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_seed&apos; is never used." verbose="The function &apos;get_seed&apos; is never used." cwe="561">
            <location file="../../modules/nt/random.cpp" line="80" column="0"/>
            <symbol>get_seed</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;pcg32_init&apos; is never used." verbose="The function &apos;pcg32_init&apos; is never used." cwe="561">
            <location file="../../modules/nt/random.cpp" line="148" column="0"/>
            <symbol>pcg32_init</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;store_hash&apos; is never used." verbose="The function &apos;store_hash&apos; is never used." cwe="561">
            <location file="../../modules/nt/rc4.cpp" line="117" column="0"/>
            <symbol>store_hash</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;compute&apos; is never used." verbose="The function &apos;compute&apos; is never used." cwe="561">
            <location file="../../modules/nt/rc4.cpp" line="142" column="0"/>
            <symbol>compute</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;shift_left&apos; is never used." verbose="The function &apos;shift_left&apos; is never used." cwe="561">
            <location file="../../modules/nt/rc5.cpp" line="39" column="0"/>
            <symbol>shift_left</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;shift_right&apos; is never used." verbose="The function &apos;shift_right&apos; is never used." cwe="561">
            <location file="../../modules/nt/rc5.cpp" line="42" column="0"/>
            <symbol>shift_right</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;rotate_left&apos; is never used." verbose="The function &apos;rotate_left&apos; is never used." cwe="561">
            <location file="../../modules/nt/rc5.cpp" line="45" column="0"/>
            <symbol>rotate_left</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;rotate_right&apos; is never used." verbose="The function &apos;rotate_right&apos; is never used." cwe="561">
            <location file="../../modules/nt/rc5.cpp" line="48" column="0"/>
            <symbol>rotate_right</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;decrypt&apos; is never used." verbose="The function &apos;decrypt&apos; is never used." cwe="561">
            <location file="../../modules/nt/rc5.cpp" line="54" column="0"/>
            <symbol>decrypt</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;expand&apos; is never used." verbose="The function &apos;expand&apos; is never used." cwe="561">
            <location file="../../modules/nt/rc5.cpp" line="58" column="0"/>
            <symbol>expand</symbol>
        </error>
        <error id="checkersReport" severity="information" msg="Active checkers: There was critical errors (use --checkers-report=&lt;filename&gt; to see details)" verbose="Active checkers: There was critical errors (use --checkers-report=&lt;filename&gt; to see details)"/>
    </errors>
</results>
